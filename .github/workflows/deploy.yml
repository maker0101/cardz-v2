name: Database Migrations

on:
  push:
    branches:
      - main

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      PG_URL: ${{ secrets.PG_URL }}
      ZERO_UPSTREAM_DB: ${{ secrets.ZERO_UPSTREAM_DB }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Deploy zero-cache to Fly if necessary
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          set -e
          # Generate current (local) config JSON from fly.toml
          fly config show --local > local.json
          # Fetch last deployed (remote) config JSON
          fly config show > remote.json || true
          # Deploy only when the configs differ
          if ! diff -q remote.json local.json > /dev/null; then
            echo "üî• fly.toml change detected ‚Äì deploying‚Ä¶"
            fly deploy
          else
            echo "‚úÖ fly.toml unchanged ‚Äì skipping deploy."
          fi

      - name: Update DB schema
        run: |
          set -o pipefail

          # Run drizzle-kit, capture stdout and stderr separately
          npx drizzle-kit push --force >stdout.log 2>stderr.log

          echo "STDOUT:"
          cat stdout.log

          echo "STDERR:"
          cat stderr.log

          # If stderr is not empty, fail
          if [ -s stderr.log ]; then
            echo "‚ùå drizzle-kit emitted errors to stderr"
            exit 1
          fi

      - name: Update zero permissions
        run: |
          npx zero-deploy-permissions -p "zero/schema.ts"
